#!/bin/bash

if [ "$2" == "" ]; then
        cluster=test
else
        cluster=$2
fi


dcmd=${*:3}
echo "distributed command: $dcmd"
hostfil=$(which dexxhosts)
dhosts=$(awk "(\$3 == \"h\") && (\$6 == \"$cluster\") {print \$1}" $hostfil)
cnms=$(awk "(\$3 == \"h\") && (\$6 == \"$cluster\") {print \$2}" $hostfil)


echo ===========\$dhosts============
echo  $dhosts
echo ===========\$cnms\ \ ============
echo  $cnms
echo ===============================


for dh in $dhosts; do
	ssh root@$dh bash <<'SSH_L1'
		echo "$PATH" > ~/PATH.TMP
		#echo "$PATH"		


SSH_L1

	ssh root@$dh bash <<SSH_L1
		export PATH=\$(cat ~/PATH.TMP) 
		export PATH=\$PATH:/root/xlbase/alias
		dhosts_o="$dhosts"
		dhosts=(\${dhosts_o//\\n/ })
		echo =====\\\$dhosts in remote ========
		echo \$dhosts
		echo ===============================
		cnms_o="$cnms"
		cnms=(\${cnms_o//\\n/ })
		echo =====\\\$cnms in remote ==========
		echo \$cnms
		echo ===============================
		if [ "$1" == "-a" ]; then

                        ##echo "1: \$PATH"

			#cat /root/.bashrc
			#source /root/.bashrc
			##echo "dexxhosts \$(which dexxhosts)"
			#export PATH=\$PATH:\$(dirname \$(which dexxhosts))
			##echo "2: \$PATH"
			ids="\$(\$(which dls) -ll)"
			#echo "ids: \$ids"
			ids=(\${ids//\\n/ })

			if [ "\$ids" == "" ]; then
				echo "no alive containers!"
			else
			

				for id in "\${ids[@]}"; do
					echo "[< Server    >]" : IP\ \ \ \ \ \ \ : $dh
					echo "[< Container >]" : ID\ \ \ \ \ \ \ : \$id
					echo "[< Container >]" : Username : \$(/usr/bin/whoami)
					echo "[< Container >]" : Hostname : \$(/bin/hostname)
					
					expath=\$(docker exec \$id 'pwd')
					echo "[< Container >]" : PATH\ \ \ \ \ : \$expath
					#docker exec \$id ${*:2}
					echo '/bin/bash -c "$dcmd"'
					docker exec \$id /bin/bash -c "$dcmd"
				done 
				IFS=ifsold
			fi
		else
			echo Docker Host Mode: \(Please specify docker container ID\)
			array_contains2 () { 
			    local array="\$1[@]"
			    local seeking=\$2
			    local in=1
				echo "$array"
			    for element in \${!array}; do
			        if [[ \$element == \$seeking ]]; then
			            in=0
			            break
			        fi
			    done
			    return \$in
			}
			dlss=\$(\$(which dls) -ll)
			dlsss=(\${dlss//\\n/ })			
			echo =====\\\$dlsss in remote =========
                	echo \$dlsss
                	echo ===============================

			#echo 123
			#echo \${dlsss[1]}
			#echo \${dhosts[1]}
			#echo 456
			#Do not support IP so far...
			#if [[ \$(array_contains2 dlsss "$1" && echo 1 || echo 0) == 1 ]] || [[ \$(array_contains2 dhosts "$1" && echo 1 || echo 0) == 1 ]] || [[ \$(array_contains2 cnms "$1" && echo 1 || echo 0) == 1 ]]; then 
			if [[ \$(array_contains2 dlsss "$1" && echo 1 || echo 0) == 1 ]] || [[ \$(array_contains2 cnms "$1" && echo 1 || echo 0) == 1 ]]; then 
				docker exec $1 ${*:3} 
			else
				#echo \$(\$(which dls) -ll)
				#echo $1
				#echo \$(array_contains2 \$(\$(which dls) -ll) "$1")
				echo Wrong container ID!
			fi
		fi 

SSH_L1

done



#sed -r 's/:Host +=> +\"[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\"/:Host               => \"\"/g' /usr/share/pcsd/ssl.rb
