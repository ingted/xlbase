#!/bin/bash


if [ "$1" == "" ]; then
	echo "XL role is required!"
	exit 999
else
	role=$1
fi



if [ "$6" == "" ]; then
        
 	echo "cluster is required! sets to \"test\""
	cluster=test
else
        cluster=$6
fi


if [ "$7" == "" ]; then
 	echo "pgver is required! exit"
	exit 999
else
        pgver=$7
fi


if [ "$2" == "" ]; then
 	echo "pguser is required! exit"
	exit 999
else
        pgu=$2
fi

echo $(date +"%T") \[\| xl-init \|\] BEGINNING...



specified_cnm=$3
specified_nid=$4
specified_sm=$5

ifNoCheck=$8




if [ "$ifNoCheck" == 1 ]; then
	conf=$(./mgmt-xl-get-confname-no-check $role $pgver $cluster $specified_nid $specified_sm|awk 'NR>2 && ($3 != "-") {print $1","$2","$3}'|sort|uniq|sed '/^$/d')
	if [ "$conf" == "invalid specified host!" ]; then
		echo "invalid specified host! mgmt-xl-init failed!"
		continue
	fi
        dir=$(echo "$conf"|awk '{split($0, a, ","); print a[1]}'|sort|uniq)

        echo $(date +"%T") \[\| xl-init \|\] @$specified_cnm $1 $dir
        util-bpx "$specified_cnm" $pgu cluster-xl-init.ps1 $specified_cnm $1 $dir 1 1
        #echo "conf: $conf"
        for i in $conf; do
                echo $(date +"%T") \[\| xl-conf begin\|\] @$specified_cnm $i
                confarr=(${i//\,/ })
                #echo "$confarr"
                #confpath=$(echo "$conf"|awk '{split($0, a, ","); print a[2]}'|sort|uniq)
                confpath=${confarr[1]}
                conftemp=${confarr[2]}
                #echo "$(which $conftemp.example)"
                #echo "$conftemp"
                dexxdir=$(dirname $(which dexxhosts))
		#echo "gen => $conftemp.example"
                exp="$dexxdir/$conftemp.example"
                if [ -e $exp ]; then
                        #echo $exp
                        confexp=$(cat $exp)
                        #echo "$confexp"

                        confstr=$(echo "$(eval "cluster=$cluster; host=$specified_cnm; source $(which dexxparammap); echo \"$confexp\"")")
                        #echo "$confstr"
                        conf64=$(echo "$confstr"|base64)

                        util-bpx "$specified_cnm" $pgu cluster-xl-conf.ps1 $confpath $conf64
                fi
                echo $(date +"%T") \[\| xl-conf end  \|\] @$specified_cnm $confpath


        done	

else
	hosts=$(./mgmt-xl-get-host-by-role "$role" $cluster)
	for host in $hosts; do
		nid=$(./mgmt-xl-get-node-id "$host" $cluster)
		if [ "$specified_nid" == "-" ] || [ "$specified_nid" == "$nid" ]; then
			sm=$(./mgmt-xl-get-m-or-s "$host"  $cluster)
			if [ "$specified_sm" == "-" ] || [ "$specified_sm" == "$sm" ]; then
				if [ "$specified_cnm" == "-" ] || [ "$specified_cnm" == "$host" ]; then
	
					conf=$(./mgmt-xl-get-confname "$host" $pgver $cluster|awk 'NR>2 && ($3 != "-") {print $1","$2","$3}'|sort|uniq|sed '/^$/d')
					if [ "$conf" == "invalid specified host!" ]; then
						echo "invalid specified host! mgmt-xl-init failed!"
						continue
					fi
					dir=$(echo "$conf"|awk '{split($0, a, ","); print a[1]}'|sort|uniq)
					
					echo $(date +"%T") \[\| xl-init \|\] @$host $1 $dir
					util-bpx "$host" $pgu cluster-xl-init.ps1 $host $1 $dir
					#echo "conf: $conf"
					for i in $conf; do
						echo $(date +"%T") \[\| xl-conf begin\|\] @$host $confpath
						echo "i: $i"
						confarr=(${i//\,/ })
						#echo "$confarr"
						#confpath=$(echo "$conf"|awk '{split($0, a, ","); print a[2]}'|sort|uniq)
						confpath=${confarr[1]}
						conftemp=${confarr[2]}
						#echo "$(which $conftemp.example)"
						#echo "$conftemp"
						dexxdir=$(dirname $(which dexxhosts))
						exp="$dexxdir/$conftemp.example"
						if [ -e $exp ]; then
							#echo $exp
							confexp=$(cat $exp)
							#echo "$confexp"
	
							confstr=$(echo "$(eval "cluster=$cluster; host=$host; source $(which dexxparammap); echo \"$confexp\"")")
							echo "$confstr"
							conf64=$(echo "$confstr"|base64)
	
							util-bpx "$host" $pgu cluster-xl-conf.ps1 $confpath $conf64
						fi
						echo $(date +"%T") \[\| xl-conf end  \|\] @$host 
	
	
					done
				fi
			fi
		fi
	done
fi
